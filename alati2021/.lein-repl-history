1
5
6.99
"Hello World"
*4
*3
(1 2 3)
(+ 2 4)
(+ )
+
(str *4)
(str *4 *1)
(str *1)
(str *5)
(str *2)
(str *3)
(str *6)
(str *7)
"Hello world"
(str *1)
(str *2)
(str *3)
(str 1 "Hello World")
(println str)
(println str "Hello World" 123)
(println (str "Hello World" 123))
(if  )
(if 1 8 5)
(!if 1 8 5) 
(if !1 8 5) 
(if -1 8 5) 
(if 0 8 5) 
(if 0 8 5)?
?(if 0 8 5)
(if\ 8 5)
(if 8 5)
(if 8 5 0 1)
(if nil 8 5)
(if println(test) 8 5)
(if (println(test) 8 5))
(if (= println(test)) 9 5)
(if user (say-hello user) (require-login user))
(def user "Pera")
(if user (say-hello user) (require-login user))
(def say-hello println)
(if user (say-hello user) (require-login user))
(say-hello 1 2 3)
(def require-login nil)
(if user (say-hello user) (require-login user))
(if nil (say-hello user) (require-login user))
(if nil (say-hello user) (require-login))
(if user (say-hello user) (require-login user))
(if (= user "Mika") (say-hello user) (require-login user))
(if (= user "Mika") (say-hello user) (require-login))
require-login 
(def require-login str)
(def require-login (partial str "Morate se logovati, "))
(if (= user "Mika") (say-hello user) (require-login user))
(def user "Mika")
(if (= user "Mika") (say-hello user) (require-login user))
*3
*2
+ 1 2 3
( + 1 2 3)
(clojure.string/join "Hello" "World")